AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: CapitalOneWise - Add Expense Function

Globals:
  Function:
    Timeout: 10
    Runtime: python3.11
    MemorySize: 128

Resources:

  AddExpenseFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AddExpenseFunction
      Handler: app.lambda_handler
      CodeUri: hello_world/
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ExpensesTable
      Environment:
        Variables:
          EXPENSES_TABLE: !Ref ExpensesTable
      Events:
        AddExpenseApi:
          Type: Api
          Properties:
            Path: /add-expense
            Method: post

  ExpensesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ExpensesTable
      AttributeDefinitions:
        - AttributeName: expense_id
          AttributeType: S
      KeySchema:
        - AttributeName: expense_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  BudgetsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BudgetsTable
      AttributeDefinitions:
        - AttributeName: user_id
          AttributeType: S
        - AttributeName: category
          AttributeType: S
      KeySchema:
        - AttributeName: user_id
          KeyType: HASH
        - AttributeName: category
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST

  AddBudgetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: AddBudgetFunction
      Handler: add_budget.lambda_handler
      CodeUri: hello_world/
      Runtime: python3.11
      Timeout: 10
      MemorySize: 128
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref BudgetsTable
      Environment:
        Variables:
          BUDGETS_TABLE: !Ref BudgetsTable
      Events:
        AddBudgetApi:
          Type: Api
          Properties:
            Path: /add-budget
            Method: post
  OverspendAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: OverspendAlerts

  CheckBudgetsFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CheckBudgetsFunction
      Handler: check_budget.lambda_handler
      CodeUri: hello_world/
      Runtime: python3.11
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ExpensesTable
        - DynamoDBReadPolicy:
            TableName: !Ref BudgetsTable
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt OverspendAlertsTopic.TopicName
      Environment:
        Variables:
          EXPENSES_TABLE: !Ref ExpensesTable
          BUDGETS_TABLE: !Ref BudgetsTable
          SNS_TOPIC_ARN: !Ref OverspendAlertsTopic
      Events:
        WeeklyBudgetCheck:
          Type: Schedule
          Properties:
            Schedule: cron(0 8 ? * 1 *)
            Name: WeeklyBudgetCheckRule

Outputs:
  AddExpenseFunction:
    Description: "Add Expense Lambda Function"
    Value: !GetAtt AddExpenseFunction.Arn

  AddExpenseApiEndpoint:
    Description: "API Gateway endpoint for Add Expense"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/add-expense"
